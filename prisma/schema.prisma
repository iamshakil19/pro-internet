generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String     @id @default(uuid())
  name      String
  email     String     @unique
  role      String
  image     String?
  phone     String
  password  String
  access    Boolean?   @default(true)
  createdAt DateTime   @default(now())
  bookings  Booking[]
  feedbacks Feedback[]

  @@map("users")
}

model Package {
  id             String    @id @default(uuid())
  name           String
  price          Int
  renewsFee      Int
  category       String
  storage        String
  bandwidth      String
  website        String
  cpu            String
  physicalMemory String
  process        String
  desc           String
  createdAt      DateTime  @default(now())
  updatedAt      DateTime  @updatedAt
  bookings       Booking[]

  @@map("packages")
}

model Booking {
  id        String   @id @default(uuid())
  packageId String
  package   Package  @relation(fields: [packageId], references: [id])
  userId    String
  user      User     @relation(fields: [userId], references: [id])
  startDate DateTime
  endDate   DateTime
  status    Status   @default(pending)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("bookings")
}

enum Status {
  pending
  accepted
  cancel
}

model Feedback {
  id        String   @id @default(uuid())
  userId    String
  user      User     @relation(fields: [userId], references: [id])
  desc      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("feedbacks")
}

model Blog {
  id        String   @id @default(uuid())
  title     String
  desc      String
  image     String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("blogs")
}

model Faq {
  id        String   @id @default(uuid())
  title     String
  desc      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("faqs")
}
